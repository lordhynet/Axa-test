{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/upload.service\";\nimport * as i3 from \"@angular/common\";\nfunction UploadsComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 29);\n    i0.ɵɵtext(1, \" File type must be .csv or .xls/.xlsx \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UploadsComponent_span_44_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \", \");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"text-danger\": a0\n  };\n};\nfunction UploadsComponent_span_44_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 30);\n    i0.ɵɵtext(1);\n    i0.ɵɵtemplate(2, UploadsComponent_span_44_ng_container_2_Template, 2, 0, \"ng-container\", 31);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const number_r4 = ctx.$implicit;\n    const i_r5 = ctx.index;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(3, _c0, i_r5 >= ctx_r1.result.divisibleBy2.length - 2));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", number_r4, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", i_r5 < ctx_r1.result.divisibleBy2.length - 1);\n  }\n}\nfunction UploadsComponent_span_49_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \", \");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction UploadsComponent_span_49_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 30);\n    i0.ɵɵtext(1);\n    i0.ɵɵtemplate(2, UploadsComponent_span_49_ng_container_2_Template, 2, 0, \"ng-container\", 31);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const number_r7 = ctx.$implicit;\n    const i_r8 = ctx.index;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(3, _c0, i_r8 < 4));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", number_r7, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", i_r8 < ctx_r2.result.divisibleBy7.length - 1);\n  }\n}\nfunction UploadsComponent_span_54_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \", \");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction UploadsComponent_span_54_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 30);\n    i0.ɵɵtext(1);\n    i0.ɵɵtemplate(2, UploadsComponent_span_54_ng_container_2_Template, 2, 0, \"ng-container\", 31);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const number_r10 = ctx.$implicit;\n    const i_r11 = ctx.index;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(3, _c0, i_r11 < 3));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", number_r10, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", i_r11 < ctx_r3.result.divisibleBy3.length - 1);\n  }\n}\nclass UploadsComponent {\n  constructor(formBuilder, uploadService) {\n    this.formBuilder = formBuilder;\n    this.uploadService = uploadService;\n    this.fileTypeError = false;\n    this.uploadForm = this.formBuilder.group({\n      document: [null]\n    });\n  }\n  onFileSelected(event) {\n    const element = event.target;\n    let fileList = element.files;\n    if (fileList && fileList.length > 0) {\n      const file = fileList[0];\n      const fileControl = this.uploadForm.get('file');\n      if (fileControl) {\n        if (!file.name.endsWith('.xlsx')) {\n          fileControl.setErrors({\n            incorrectFileType: true\n          });\n        } else {\n          fileControl.setValue(file);\n          fileControl.setErrors(null);\n        }\n      }\n    }\n  }\n  onFileSelect(event) {\n    const element = event.currentTarget;\n    let file = element.files?.item(0) ?? null;\n    this.fileTypeError = false;\n    if (file) {\n      if (/(.csv|.xls|.xlsx)$/i.test(file.name)) {\n        this.uploadForm.patchValue({\n          document: file\n        });\n      } else {\n        this.fileTypeError = true;\n        this.uploadForm.reset();\n      }\n    }\n  }\n  onUpload() {\n    if (this.uploadForm.valid && !this.fileTypeError) {\n      const fileToUpload = this.uploadForm.get('document')?.value;\n      console.log(fileToUpload);\n      if (fileToUpload) {\n        // Call the upload service\n        this.uploadService.upload(fileToUpload).subscribe(event => {\n          console.log('Upload successful:', event);\n          this.result = event;\n        }, error => {\n          console.error('Error uploading file:', error);\n        });\n      }\n    } else {\n      console.error('Form is not valid or file type error exists');\n    }\n  }\n  resetUpload() {\n    this.uploadForm.reset();\n    this.fileTypeError = false;\n  }\n}\nUploadsComponent.ɵfac = function UploadsComponent_Factory(t) {\n  return new (t || UploadsComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.UploadService));\n};\nUploadsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UploadsComponent,\n  selectors: [[\"app-uploads\"]],\n  decls: 98,\n  vars: 13,\n  consts: [[1, \"row\"], [1, \"col-md-6\", \"top-content\"], [1, \"p-3\"], [1, \"container\"], [1, \"col-12\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"document\"], [\"type\", \"file\", \"id\", \"document\", 3, \"change\"], [\"class\", \"alert alert-danger mt-2\", 4, \"ngIf\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", \"mr-2\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"container\", \"mt-4\"], [1, \"card\"], [1, \"card-body\"], [1, \"card-title\"], [1, \"custom-list\"], [1, \"col-md-6\"], [1, \"statistics-form\"], [3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [1, \"form-row\", \"mb-3\"], [1, \"col\"], [\"type\", \"text\", \"readonly\", \"\", \"placeholder\", \"mode\", 1, \"form-control\", 3, \"value\"], [\"type\", \"text\", \"readonly\", \"\", \"placeholder\", \"median\", 1, \"form-control\", 3, \"value\"], [\"type\", \"text\", \"readonly\", \"\", 1, \"form-control\", 3, \"value\"], [1, \"form-group\", \"row\"], [1, \"col-sm-6\", \"col-form-label\"], [1, \"col-sm-6\"], [\"type\", \"text\", \"readonly\", \"\", 1, \"form-control-plaintext\", 3, \"value\"], [1, \"alert\", \"alert-danger\", \"mt-2\"], [3, \"ngClass\"], [4, \"ngIf\"]],\n  template: function UploadsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 0)(5, \"div\", 4)(6, \"h2\");\n      i0.ɵɵtext(7, \"File Upload\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"form\", 5);\n      i0.ɵɵlistener(\"ngSubmit\", function UploadsComponent_Template_form_ngSubmit_8_listener() {\n        return ctx.onUpload();\n      });\n      i0.ɵɵelementStart(9, \"div\", 6)(10, \"label\", 7);\n      i0.ɵɵtext(11, \"Upload Document\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"br\");\n      i0.ɵɵelementStart(13, \"input\", 8);\n      i0.ɵɵlistener(\"change\", function UploadsComponent_Template_input_change_13_listener($event) {\n        return ctx.onFileSelect($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(14, UploadsComponent_div_14_Template, 2, 0, \"div\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"button\", 10);\n      i0.ɵɵlistener(\"click\", function UploadsComponent_Template_button_click_15_listener() {\n        return ctx.resetUpload();\n      });\n      i0.ɵɵtext(16, \"Reset uploaded content\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"button\", 11);\n      i0.ɵɵtext(18, \"Run Upload\");\n      i0.ɵɵelementEnd()()()()()()();\n      i0.ɵɵelementStart(19, \"div\", 1)(20, \"div\", 2)(21, \"div\", 12)(22, \"div\", 13)(23, \"div\", 14)(24, \"h5\", 15);\n      i0.ɵɵtext(25, \"Instructions\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"ol\", 16)(27, \"li\");\n      i0.ɵɵtext(28, \"Design webpage using Angular framework\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"li\");\n      i0.ɵɵtext(30, \"It must be mobile responsive\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"li\");\n      i0.ɵɵtext(32, \"It should be able to accept upload file in .txt format only\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(33, \"li\");\n      i0.ɵɵtext(34, \" File format can be designed as you wish; however, it should process a series of numbers populated on the file when the \\\"Run upload\\\" button is clicked and give outputs as shown below \");\n      i0.ɵɵelementEnd()()()()()()()();\n      i0.ɵɵelementStart(35, \"div\", 0)(36, \"div\", 17)(37, \"div\", 2)(38, \"div\", 18)(39, \"form\")(40, \"div\", 6)(41, \"label\");\n      i0.ɵɵtext(42, \"All numbers divisible by 2 (Show last 2 numbers in red)\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(43, \"br\");\n      i0.ɵɵtemplate(44, UploadsComponent_span_44_Template, 3, 5, \"span\", 19);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(45, \"div\", 6)(46, \"label\");\n      i0.ɵɵtext(47, \"All numbers divisible by 7 (Show first 4 numbers in red)\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(48, \"br\");\n      i0.ɵɵtemplate(49, UploadsComponent_span_49_Template, 3, 5, \"span\", 19);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(50, \"div\", 6)(51, \"label\");\n      i0.ɵɵtext(52, \"All numbers divisible by 3 (Show first 3 numbers in red)\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(53, \"br\");\n      i0.ɵɵtemplate(54, UploadsComponent_span_54_Template, 3, 5, \"span\", 19);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(55, \"div\", 20)(56, \"div\", 21)(57, \"label\");\n      i0.ɵɵtext(58, \"Mode\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(59, \"input\", 22);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(60, \"div\", 21)(61, \"label\");\n      i0.ɵɵtext(62, \"Median\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(63, \"input\", 23);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(64, \"div\", 6)(65, \"label\");\n      i0.ɵɵtext(66, \"Shortest series of numbers to get to 65 when added up\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(67, \"input\", 24);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(68, \"div\", 6)(69, \"label\");\n      i0.ɵɵtext(70, \"Shortest series of numbers to get to 35 when added up\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(71, \"input\", 24);\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelementStart(72, \"div\", 17)(73, \"div\", 12)(74, \"div\", 13)(75, \"div\", 14)(76, \"h4\", 15);\n      i0.ɵɵtext(77, \"Summaries\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(78, \"div\", 25)(79, \"label\", 26);\n      i0.ɵɵtext(80, \"Sum of all odd numbers:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(81, \"div\", 27);\n      i0.ɵɵelement(82, \"input\", 28);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(83, \"div\", 25)(84, \"label\", 26);\n      i0.ɵɵtext(85, \"Sum of all even numbers:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(86, \"div\", 27);\n      i0.ɵɵelement(87, \"input\", 28);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(88, \"div\", 25)(89, \"label\", 26);\n      i0.ɵɵtext(90, \"Sum of all single digit numbers:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(91, \"div\", 27);\n      i0.ɵɵelement(92, \"input\", 28);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(93, \"div\", 25)(94, \"label\", 26);\n      i0.ɵɵtext(95, \"Sum of all double digit numbers:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(96, \"div\", 27);\n      i0.ɵɵelement(97, \"input\", 28);\n      i0.ɵɵelementEnd()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"formGroup\", ctx.uploadForm);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.fileTypeError);\n      i0.ɵɵadvance(30);\n      i0.ɵɵproperty(\"ngForOf\", ctx.result == null ? null : ctx.result.divisibleBy2);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.result.divisibleBy7);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.result.divisibleBy3);\n      i0.ɵɵadvance(5);\n      i0.ɵɵpropertyInterpolate(\"value\", ctx.result.mode);\n      i0.ɵɵadvance(4);\n      i0.ɵɵpropertyInterpolate(\"value\", ctx.result.median);\n      i0.ɵɵadvance(4);\n      i0.ɵɵpropertyInterpolate(\"value\", ctx.result.shortestSeriesTo65);\n      i0.ɵɵadvance(4);\n      i0.ɵɵpropertyInterpolate(\"value\", ctx.result.shortestSeriesTo35);\n      i0.ɵɵadvance(11);\n      i0.ɵɵpropertyInterpolate(\"value\", ctx.result.sumOfOddNumbers);\n      i0.ɵɵadvance(5);\n      i0.ɵɵpropertyInterpolate(\"value\", ctx.result.sumOfEvenNumbers);\n      i0.ɵɵadvance(5);\n      i0.ɵɵpropertyInterpolate(\"value\", ctx.result.sumOfSingleDigitNumbers);\n      i0.ɵɵadvance(5);\n      i0.ɵɵpropertyInterpolate(\"value\", ctx.result.sumOfDoubleDigitNumbers);\n    }\n  },\n  dependencies: [i3.NgClass, i3.NgForOf, i3.NgIf, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.NgForm],\n  styles: [\".custom-list[_ngcontent-%COMP%] {\\n    line-height: 1.8; \\n    font-size: 0.9rem;\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy91cGxvYWRzL3VwbG9hZHMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUVBO0lBQ0ksZ0JBQWdCO0lBQ2hCLGlCQUFpQjtFQUNuQiIsInNvdXJjZXNDb250ZW50IjpbIlxuXG4uY3VzdG9tLWxpc3Qge1xuICAgIGxpbmUtaGVpZ2h0OiAxLjg7IFxuICAgIGZvbnQtc2l6ZTogMC45cmVtO1xuICB9XG4gIFxuIFxuICAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});\nexport { UploadsComponent };","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelementContainerStart","ɵɵelementContainerEnd","ɵɵtemplate","UploadsComponent_span_44_ng_container_2_Template","ɵɵproperty","ɵɵpureFunction1","_c0","i_r5","ctx_r1","result","divisibleBy2","length","ɵɵadvance","ɵɵtextInterpolate1","number_r4","UploadsComponent_span_49_ng_container_2_Template","i_r8","number_r7","ctx_r2","divisibleBy7","UploadsComponent_span_54_ng_container_2_Template","i_r11","number_r10","ctx_r3","divisibleBy3","UploadsComponent","constructor","formBuilder","uploadService","fileTypeError","uploadForm","group","document","onFileSelected","event","element","target","fileList","files","file","fileControl","get","name","endsWith","setErrors","incorrectFileType","setValue","onFileSelect","currentTarget","item","test","patchValue","reset","onUpload","valid","fileToUpload","value","console","log","upload","subscribe","error","resetUpload","ɵɵdirectiveInject","i1","FormBuilder","i2","UploadService","selectors","decls","vars","consts","template","UploadsComponent_Template","rf","ctx","ɵɵlistener","UploadsComponent_Template_form_ngSubmit_8_listener","ɵɵelement","UploadsComponent_Template_input_change_13_listener","$event","UploadsComponent_div_14_Template","UploadsComponent_Template_button_click_15_listener","UploadsComponent_span_44_Template","UploadsComponent_span_49_Template","UploadsComponent_span_54_Template","ɵɵpropertyInterpolate","mode","median","shortestSeriesTo65","shortestSeriesTo35","sumOfOddNumbers","sumOfEvenNumbers","sumOfSingleDigitNumbers","sumOfDoubleDigitNumbers"],"sources":["C:\\Users\\gideon.surakat\\Desktop\\Gideon\\Gideon\\src\\app\\components\\uploads\\uploads.component.ts","C:\\Users\\gideon.surakat\\Desktop\\Gideon\\Gideon\\src\\app\\components\\uploads\\uploads.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { UploadService } from 'src/app/services/upload.service';\n\n@Component({\n  selector: 'app-uploads',\n  templateUrl: './uploads.component.html',\n  styleUrls: ['./uploads.component.css']\n})\nexport class UploadsComponent {\n  uploadForm!: FormGroup;\n  fileTypeError: boolean = false;\n  result : any\n  constructor(private formBuilder: FormBuilder, private uploadService :UploadService ) { \n    this.uploadForm = this.formBuilder.group({\n      document: [null]  \n    });\n  }\n\n\n  onFileSelected(event: Event): void {\n    const element = event.target as HTMLInputElement;\n    let fileList: FileList | null = element.files;\n    if (fileList && fileList.length > 0) {\n      const file = fileList[0];\n  \n      const fileControl = this.uploadForm.get('file');\n  \n      if (fileControl) {\n        if (!file.name.endsWith('.xlsx')) {\n          fileControl.setErrors({ incorrectFileType: true });\n        } else {\n          fileControl.setValue(file);\n          fileControl.setErrors(null);\n        }\n      }\n    }\n  }\n  \n\n\n  onFileSelect(event: Event) {\n    const element = event.currentTarget as HTMLInputElement;\n    let file: File | null = element.files?.item(0) ?? null;\n\n    this.fileTypeError = false;\n    \n    if (file) {\n      if (/(.csv|.xls|.xlsx)$/i.test(file.name)) {\n        this.uploadForm.patchValue({\n          document: file\n        });\n      } else {\n        this.fileTypeError = true;\n        this.uploadForm.reset();\n      }\n    }\n  }\n\n  onUpload(): void {\n    if (this.uploadForm.valid && !this.fileTypeError) {\n    \n      const fileToUpload = this.uploadForm.get('document')?.value;\nconsole.log(fileToUpload)\n      \n      if (fileToUpload) {\n        // Call the upload service\n        this.uploadService.upload(fileToUpload).subscribe(\n          (event) => {\n            \n            console.log('Upload successful:', event);\n            this.result = event\n          },\n          (error) => {\n           \n            console.error('Error uploading file:', error);\n          }\n        );\n      }\n    } else {\n      console.error('Form is not valid or file type error exists');\n    }\n  }\n  resetUpload() {\n    this.uploadForm.reset();\n    this.fileTypeError = false;\n  }\n}\n"," <!-- Main Content Area -->\n\n    <!-- Top Content -->\n    <div class=\"row\">\n        <div class=\"col-md-6 top-content\">\n            <div class=\"p-3\">\n                <div class=\"container\">\n                <div class=\"row\">\n                    <div class=\"col-12\">\n                    <h2>File Upload</h2>\n                    \n                    <form [formGroup]=\"uploadForm\" (ngSubmit)=\"onUpload()\">\n    \n                        <div class=\"form-group\">\n                          <label for=\"document\">Upload Document</label><br/>\n                          <input type=\"file\" id=\"document\" (change)=\"onFileSelect($event)\">\n                          <div *ngIf=\"fileTypeError\" class=\"alert alert-danger mt-2\">\n                            File type must be .csv or .xls/.xlsx\n                          </div>\n                        </div>\n                    \n                        <button type=\"button\" class=\"btn btn-secondary mr-2\" (click)=\"resetUpload()\">Reset uploaded content</button>\n                        <button type=\"submit\" class=\"btn btn-primary\">Run Upload</button>\n                    \n                      </form>\n                    </div>\n                </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-md-6 top-content\">\n            <div class=\"p-3 \">\n               \n                <div class=\"container mt-4\">\n                    <div class=\"card\">\n                    <div class=\"card-body\">\n                        <h5 class=\"card-title\">Instructions</h5>\n                        <ol class=\"custom-list\">\n                        <li>Design webpage using Angular framework</li>\n                        <li>It must be mobile responsive</li>\n                        <li>It should be able to accept upload file in .txt format only</li>\n                        <li>\n                            File format can be designed as you wish; however, it should process a\n                            series of numbers populated on the file when the \"Run upload\" button\n                            is clicked and give outputs as shown below\n                        </li>\n                        </ol>\n                    </div>\n                    </div>\n                </div>\n  \n            </div>\n        </div>\n    </div>\n\n    <!-- Bottom Content -->\n    <div class=\"row\">\n        <div class=\"col-md-6\">\n            <div class=\"p-3\">\n\n                <div class=\"statistics-form\">\n                    <form>\n                      <div class=\"form-group\">\n                        <label>All numbers divisible by 2 (Show last 2 numbers in red)</label><br/>\n                        <span *ngFor=\"let number of result?.divisibleBy2; let i = index\" \n                        [ngClass]=\"{'text-danger': i >= result.divisibleBy2.length - 2}\">\n                          {{ number }}\n                          <ng-container *ngIf=\"i < result.divisibleBy2.length - 1\">, </ng-container>\n                        </span>\n                      </div>\n                  \n                      <div class=\"form-group\">\n                        <label>All numbers divisible by 7 (Show first 4 numbers in red)</label><br/>\n                        <span *ngFor=\"let number of result.divisibleBy7; let i = index\" \n                        [ngClass]=\"{'text-danger': i < 4}\">\n                        {{ number }}<ng-container *ngIf=\"i < result.divisibleBy7.length - 1\">, </ng-container>\n                      </span>\n                      </div>\n                  \n                      <div class=\"form-group\">\n                        <label>All numbers divisible by 3 (Show first 3 numbers in red)</label><br/>\n                        <span *ngFor=\"let number of result.divisibleBy3; let i = index\" \n                        [ngClass]=\"{'text-danger': i < 3}\">\n                        {{ number }}<ng-container *ngIf=\"i < result.divisibleBy3.length - 1\">, </ng-container>\n                      </span>\n                      </div>\n                  \n                      <div class=\"form-row mb-3\">\n                        <div class=\"col\">\n                          <label>Mode</label>\n                          <input type=\"text\" readonly class=\"form-control\" placeholder=\"mode\" value=\"{{result.mode}}\">\n                        </div>\n                        <div class=\"col\">\n                          <label>Median</label>\n                          <input type=\"text\" readonly class=\"form-control\" placeholder=\"median\" value=\"{{result.median}}\">\n                        </div>\n                      </div>\n                  \n                      <div class=\"form-group\">\n                        <label>Shortest series of numbers to get to 65 when added up</label>\n                        <input type=\"text\" readonly class=\"form-control\" value=\"{{result.shortestSeriesTo65}}\">\n                      </div>\n                  \n                      <div class=\"form-group\">\n                        <label>Shortest series of numbers to get to 35 when added up</label>\n                        <input type=\"text\" readonly class=\"form-control\" value=\"{{result.shortestSeriesTo35}}\">\n                      </div>\n                    </form>\n                  </div>\n                  \n\n            </div>\n        </div>\n        <div class=\"col-md-6\">\n<div class=\"container mt-4\">\n    <div class=\"card\">\n      <div class=\"card-body\">\n        <h4 class=\"card-title\">Summaries</h4>\n        <div class=\"form-group row\">\n          <label class=\"col-sm-6 col-form-label\">Sum of all odd numbers:</label>\n          <div class=\"col-sm-6\">\n            <input type=\"text\" readonly class=\"form-control-plaintext\" value=\"{{result.sumOfOddNumbers}}\">\n          </div>\n        </div>\n        <div class=\"form-group row\">\n          <label class=\"col-sm-6 col-form-label\">Sum of all even numbers:</label>\n          <div class=\"col-sm-6\">\n            <input type=\"text\" readonly class=\"form-control-plaintext\" value=\"{{result.sumOfEvenNumbers}}\">\n          </div>\n        </div>\n        <div class=\"form-group row\">\n          <label class=\"col-sm-6 col-form-label\">Sum of all single digit numbers:</label>\n          <div class=\"col-sm-6\">\n            <input type=\"text\" readonly class=\"form-control-plaintext\" value=\"{{result.sumOfSingleDigitNumbers}}\">\n          </div>\n        </div>\n        <div class=\"form-group row\">\n          <label class=\"col-sm-6 col-form-label\">Sum of all double digit numbers:</label>\n          <div class=\"col-sm-6\">\n            <input type=\"text\" readonly class=\"form-control-plaintext\" value=\"{{result.sumOfDoubleDigitNumbers}}\">\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  \n    </div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}