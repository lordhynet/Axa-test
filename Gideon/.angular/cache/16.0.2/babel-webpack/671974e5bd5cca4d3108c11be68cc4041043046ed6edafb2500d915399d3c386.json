{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nclass UploadsComponent {\n  constructor() {\n    this.uploadForm = new FormGroup({\n      file: new FormControl(null, [Validators.required])\n    });\n  }\n  onFileSelected(event) {\n    const element = event.target;\n    let fileList = element.files;\n    if (fileList && fileList.length > 0) {\n      const file = fileList[0];\n      const fileControl = this.uploadForm.get('file');\n      if (fileControl) {\n        if (!file.name.endsWith('.xlsx')) {\n          fileControl.setErrors({\n            incorrectFileType: true\n          });\n        } else {\n          fileControl.setValue(file);\n          fileControl.setErrors(null);\n        }\n      }\n    }\n  }\n  runUpload() {\n    if (this.uploadForm.valid) {\n      const fileToUpload = this.uploadForm.value.file;\n    }\n  }\n  hasError(controlName, errorName) {\n    const control = this.uploadForm.get(controlName);\n    return control && control.hasError(errorName);\n  }\n}\nUploadsComponent.ɵfac = function UploadsComponent_Factory(t) {\n  return new (t || UploadsComponent)();\n};\nUploadsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UploadsComponent,\n  selectors: [[\"app-uploads\"]],\n  decls: 75,\n  vars: 0,\n  consts: [[1, \"row\"], [1, \"col-md-6\", \"top-content\"], [1, \"p-3\"], [1, \"container\", \"mt-4\"], [1, \"card\"], [1, \"card-body\"], [1, \"card-title\"], [1, \"custom-list\"], [1, \"col-md-6\"], [1, \"statistics-form\"], [1, \"form-group\"], [\"type\", \"text\", \"readonly\", \"\", 1, \"form-control\"], [1, \"form-row\"], [1, \"col\"], [\"type\", \"text\", \"readonly\", \"\", \"placeholder\", \"mode\", 1, \"form-control\"], [\"type\", \"text\", \"readonly\", \"\", \"placeholder\", \"median\", 1, \"form-control\"], [1, \"form-group\", \"row\"], [1, \"col-sm-6\", \"col-form-label\"], [1, \"col-sm-6\"], [\"type\", \"text\", \"readonly\", \"\", \"value\", \"12\", 1, \"form-control-plaintext\"], [\"type\", \"text\", \"readonly\", \"\", \"value\", \"13\", 1, \"form-control-plaintext\"], [\"type\", \"text\", \"readonly\", \"\", \"value\", \"16\", 1, \"form-control-plaintext\"], [\"type\", \"text\", \"readonly\", \"\", \"value\", \"17\", 1, \"form-control-plaintext\"]],\n  template: function UploadsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵelement(2, \"div\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 1)(4, \"div\", 2)(5, \"div\", 3)(6, \"div\", 4)(7, \"div\", 5)(8, \"h5\", 6);\n      i0.ɵɵtext(9, \"Instructions\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"ol\", 7)(11, \"li\");\n      i0.ɵɵtext(12, \"Design webpage using Angular framework\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"li\");\n      i0.ɵɵtext(14, \"It must be mobile responsive\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"li\");\n      i0.ɵɵtext(16, \"It should be able to accept upload file in .txt format only\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"li\");\n      i0.ɵɵtext(18, \" File format can be designed as you wish; however, it should process a series of numbers populated on the file when the \\\"Run upload\\\" button is clicked and give outputs as shown below \");\n      i0.ɵɵelementEnd()()()()()()()();\n      i0.ɵɵelementStart(19, \"div\", 0)(20, \"div\", 8)(21, \"div\", 2)(22, \"div\", 9)(23, \"form\")(24, \"div\", 10)(25, \"label\");\n      i0.ɵɵtext(26, \"All numbers divisible by 2 (Show last 2 numbers in red)\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(27, \"input\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"div\", 10)(29, \"label\");\n      i0.ɵɵtext(30, \"All numbers divisible by 7 (Show first 4 numbers in red)\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(31, \"input\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"div\", 10)(33, \"label\");\n      i0.ɵɵtext(34, \"All numbers divisible by 3 (Show first 3 numbers in red)\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(35, \"input\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"div\", 12)(37, \"div\", 13);\n      i0.ɵɵelement(38, \"input\", 14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(39, \"div\", 13);\n      i0.ɵɵelement(40, \"input\", 15);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(41, \"div\", 10)(42, \"label\");\n      i0.ɵɵtext(43, \"Shortest series of numbers to get to 65 when added up\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(44, \"input\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(45, \"div\", 10)(46, \"label\");\n      i0.ɵɵtext(47, \"Shortest series of numbers to get to 35 when added up\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(48, \"input\", 11);\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelementStart(49, \"div\", 8)(50, \"div\", 3)(51, \"div\", 4)(52, \"div\", 5)(53, \"h4\", 6);\n      i0.ɵɵtext(54, \"Summaries\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(55, \"div\", 16)(56, \"label\", 17);\n      i0.ɵɵtext(57, \"Sum of all odd numbers:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(58, \"div\", 18);\n      i0.ɵɵelement(59, \"input\", 19);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(60, \"div\", 16)(61, \"label\", 17);\n      i0.ɵɵtext(62, \"Sum of all even numbers:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(63, \"div\", 18);\n      i0.ɵɵelement(64, \"input\", 20);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(65, \"div\", 16)(66, \"label\", 17);\n      i0.ɵɵtext(67, \"Sum of all single digit numbers:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(68, \"div\", 18);\n      i0.ɵɵelement(69, \"input\", 21);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(70, \"div\", 16)(71, \"label\", 17);\n      i0.ɵɵtext(72, \"Sum of all double digit numbers:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(73, \"div\", 18);\n      i0.ɵɵelement(74, \"input\", 22);\n      i0.ɵɵelementEnd()()()()()()();\n    }\n  },\n  styles: [\".top-content[_ngcontent-%COMP%]{\\n    height: 50vh\\n}\\n\\n.custom-list[_ngcontent-%COMP%] {\\n    line-height: 1.8; \\n    font-size: 0.9rem;\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy91cGxvYWRzL3VwbG9hZHMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJO0FBQ0o7O0FBRUE7SUFDSSxnQkFBZ0I7SUFDaEIsaUJBQWlCO0VBQ25CIiwic291cmNlc0NvbnRlbnQiOlsiLnRvcC1jb250ZW50e1xuICAgIGhlaWdodDogNTB2aFxufVxuXG4uY3VzdG9tLWxpc3Qge1xuICAgIGxpbmUtaGVpZ2h0OiAxLjg7IFxuICAgIGZvbnQtc2l6ZTogMC45cmVtO1xuICB9XG4gIFxuIFxuICAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});\nexport { UploadsComponent };","map":{"version":3,"names":["FormControl","FormGroup","Validators","UploadsComponent","constructor","uploadForm","file","required","onFileSelected","event","element","target","fileList","files","length","fileControl","get","name","endsWith","setErrors","incorrectFileType","setValue","runUpload","valid","fileToUpload","value","hasError","controlName","errorName","control","selectors","decls","vars","consts","template","UploadsComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtext"],"sources":["/Users/mac/Desktop/Gideon/src/app/components/uploads/uploads.component.ts","/Users/mac/Desktop/Gideon/src/app/components/uploads/uploads.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-uploads',\n  templateUrl: './uploads.component.html',\n  styleUrls: ['./uploads.component.css']\n})\nexport class UploadsComponent {\n\n  constructor() { }\n\n  uploadForm = new FormGroup({\n    file: new FormControl<File | null>(null, [Validators.required]) \n  });\n\n  onFileSelected(event: Event): void {\n    const element = event.target as HTMLInputElement;\n    let fileList: FileList | null = element.files;\n    if (fileList && fileList.length > 0) {\n      const file = fileList[0];\n  \n      const fileControl = this.uploadForm.get('file');\n  \n      if (fileControl) {\n        if (!file.name.endsWith('.xlsx')) {\n          fileControl.setErrors({ incorrectFileType: true });\n        } else {\n          fileControl.setValue(file);\n          fileControl.setErrors(null);\n        }\n      }\n    }\n  }\n  \n\n  runUpload() {\n    if (this.uploadForm.valid) {\n      const fileToUpload = this.uploadForm.value.file;\n    }\n  }\n\n  hasError(controlName: string, errorName: string) {\n    const control = this.uploadForm.get(controlName);\n    return control && control.hasError(errorName);\n  }\n}\n"," <!-- Main Content Area -->\n\n    <!-- Top Content -->\n    <div class=\"row\">\n        <div class=\"col-md-6 top-content\">\n            <div class=\"p-3\">\n                <!-- <div class=\"container\">\n                <div class=\"row\">\n                    <div class=\"col-12\">\n                    <h2>File Upload</h2>\n                    <form [formGroup]=\"uploadForm\" (ngSubmit)=\"runUpload()\">\n                        <div class=\"form-group\">\n                        <label for=\"fileUpload\">Upload Document</label>\n                        <input type=\"file\" \n                                class=\"form-control-file\" \n                                id=\"fileUpload\" \n                                (change)=\"onFileSelected($event)\"\n                                formControlName=\"file\">\n                        <div *ngIf=\"hasError('file', 'required')\">\n                            File is required.\n                        </div>\n                        <div *ngIf=\"hasError('file', 'incorrectFileType')\">\n                            Please upload only .xlsx files.\n                        </div>\n                        </div>\n                        <div class=\"form-group\">\n                        <button type=\"button\" class=\"btn btn-secondary mr-2\">Reset uploaded content</button>\n                        <button type=\"submit\" class=\"btn btn-primary\">Run Upload</button>\n                        </div>\n                    </form>\n                    </div>\n                </div>\n                </div> -->\n            </div>\n        </div>\n        <div class=\"col-md-6 top-content\">\n            <div class=\"p-3 \">\n               \n                <div class=\"container mt-4\">\n                    <div class=\"card\">\n                    <div class=\"card-body\">\n                        <h5 class=\"card-title\">Instructions</h5>\n                        <ol class=\"custom-list\">\n                        <li>Design webpage using Angular framework</li>\n                        <li>It must be mobile responsive</li>\n                        <li>It should be able to accept upload file in .txt format only</li>\n                        <li>\n                            File format can be designed as you wish; however, it should process a\n                            series of numbers populated on the file when the \"Run upload\" button\n                            is clicked and give outputs as shown below\n                        </li>\n                        </ol>\n                    </div>\n                    </div>\n                </div>\n  \n            </div>\n        </div>\n    </div>\n\n    <!-- Bottom Content -->\n    <div class=\"row\">\n        <div class=\"col-md-6\">\n            <div class=\"p-3\">\n\n                <div class=\"statistics-form\">\n                    <form>\n                      <!-- Divisible by 2 Section -->\n                      <div class=\"form-group\">\n                        <label>All numbers divisible by 2 (Show last 2 numbers in red)</label>\n                        <input type=\"text\" readonly class=\"form-control\">\n                      </div>\n                  \n                      <!-- Divisible by 7 Section -->\n                      <div class=\"form-group\">\n                        <label>All numbers divisible by 7 (Show first 4 numbers in red)</label>\n                        <input type=\"text\" readonly class=\"form-control\">\n                      </div>\n                  \n                      <!-- Divisible by 3 Section -->\n                      <div class=\"form-group\">\n                        <label>All numbers divisible by 3 (Show first 3 numbers in red)</label>\n                        <input type=\"text\" readonly class=\"form-control\">\n                      </div>\n                  \n                      <!-- Mode and Median -->\n                      <div class=\"form-row\">\n                        <div class=\"col\">\n                          <input type=\"text\" readonly class=\"form-control\" placeholder=\"mode\">\n                        </div>\n                        <div class=\"col\">\n                          <input type=\"text\" readonly class=\"form-control\" placeholder=\"median\">\n                        </div>\n                      </div>\n                  \n                      <!-- Shortest series to sum Section -->\n                      <div class=\"form-group\">\n                        <label>Shortest series of numbers to get to 65 when added up</label>\n                        <input type=\"text\" readonly class=\"form-control\">\n                      </div>\n                  \n                      <!-- Shortest series to 35 Section -->\n                      <div class=\"form-group\">\n                        <label>Shortest series of numbers to get to 35 when added up</label>\n                        <input type=\"text\" readonly class=\"form-control\">\n                      </div>\n                    </form>\n                  </div>\n                  \n\n            </div>\n        </div>\n        <div class=\"col-md-6\">\n<div class=\"container mt-4\">\n    <div class=\"card\">\n      <div class=\"card-body\">\n        <h4 class=\"card-title\">Summaries</h4>\n        <div class=\"form-group row\">\n          <label class=\"col-sm-6 col-form-label\">Sum of all odd numbers:</label>\n          <div class=\"col-sm-6\">\n            <input type=\"text\" readonly class=\"form-control-plaintext\" value=\"12\">\n          </div>\n        </div>\n        <div class=\"form-group row\">\n          <label class=\"col-sm-6 col-form-label\">Sum of all even numbers:</label>\n          <div class=\"col-sm-6\">\n            <input type=\"text\" readonly class=\"form-control-plaintext\" value=\"13\">\n          </div>\n        </div>\n        <div class=\"form-group row\">\n          <label class=\"col-sm-6 col-form-label\">Sum of all single digit numbers:</label>\n          <div class=\"col-sm-6\">\n            <input type=\"text\" readonly class=\"form-control-plaintext\" value=\"16\">\n          </div>\n        </div>\n        <div class=\"form-group row\">\n          <label class=\"col-sm-6 col-form-label\">Sum of all double digit numbers:</label>\n          <div class=\"col-sm-6\">\n            <input type=\"text\" readonly class=\"form-control-plaintext\" value=\"17\">\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  \n    </div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}