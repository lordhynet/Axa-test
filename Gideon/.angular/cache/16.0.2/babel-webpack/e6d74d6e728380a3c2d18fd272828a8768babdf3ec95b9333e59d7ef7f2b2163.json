{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst baseUrl = 'http://localhost:8080/api/';\nclass TutorialService {\n  constructor(http) {\n    this.http = http;\n  }\n  upload(document) {\n    const formData = new FormData();\n    formData.append('file', document, document.name);\n    return this.http.post(`${this.baseUrl}/upload`, formData, {\n      reportProgress: true,\n      observe: 'events'\n    });\n  }\n  getAll() {\n    return this.http.get(baseUrl);\n  }\n  get(id) {\n    return this.http.get(`${baseUrl}/${id}`);\n  }\n  create(data) {\n    return this.http.post(baseUrl, data);\n  }\n}\nTutorialService.ɵfac = function TutorialService_Factory(t) {\n  return new (t || TutorialService)(i0.ɵɵinject(i1.HttpClient));\n};\nTutorialService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TutorialService,\n  factory: TutorialService.ɵfac,\n  providedIn: 'root'\n});\nexport { TutorialService };","map":{"version":3,"names":["baseUrl","TutorialService","constructor","http","upload","document","formData","FormData","append","name","post","reportProgress","observe","getAll","get","id","create","data","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/Users/mac/Desktop/Gideon/src/app/services/upload.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Tutorial } from '../models/tutorial.model';\n\nconst baseUrl = 'http://localhost:8080/api/';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TutorialService {\n  constructor(private http: HttpClient) {}\n\n  upload(document: File): Observable<any> {\n    const formData = new FormData();\n    formData.append('file', document, document.name);\n\n    return this.http.post(`${this.baseUrl}/upload`, formData, {\n      reportProgress: true,\n      observe: 'events'\n    });\n  }\n\n  getAll(): Observable<Tutorial[]> {\n    return this.http.get<Tutorial[]>(baseUrl);\n  }\n\n  get(id: any): Observable<Tutorial> {\n    return this.http.get<Tutorial>(`${baseUrl}/${id}`);\n  }\n\n  create(data: any): Observable<any> {\n    return this.http.post(baseUrl, data);\n  }\n\n \n}\n"],"mappings":";;AAKA,MAAMA,OAAO,GAAG,4BAA4B;AAE5C,MAGaC,eAAe;EAC1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEvCC,MAAMA,CAACC,QAAc;IACnB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,QAAQ,EAAEA,QAAQ,CAACI,IAAI,CAAC;IAEhD,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAC,GAAG,IAAI,CAACV,OAAO,SAAS,EAAEM,QAAQ,EAAE;MACxDK,cAAc,EAAE,IAAI;MACpBC,OAAO,EAAE;KACV,CAAC;EACJ;EAEAC,MAAMA,CAAA;IACJ,OAAO,IAAI,CAACV,IAAI,CAACW,GAAG,CAAad,OAAO,CAAC;EAC3C;EAEAc,GAAGA,CAACC,EAAO;IACT,OAAO,IAAI,CAACZ,IAAI,CAACW,GAAG,CAAW,GAAGd,OAAO,IAAIe,EAAE,EAAE,CAAC;EACpD;EAEAC,MAAMA,CAACC,IAAS;IACd,OAAO,IAAI,CAACd,IAAI,CAACO,IAAI,CAACV,OAAO,EAAEiB,IAAI,CAAC;EACtC;;AAvBWhB,eAAe,C;mBAAfA,eAAe,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAfpB,eAAe,C;SAAfA,eAAe;EAAAqB,OAAA,EAAfrB,eAAe,CAAAsB,IAAA;EAAAC,UAAA,EAFd;AAAM;SAEPvB,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}