{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst baseUrl = 'https://localhost:44350/api/';\nclass UploadService {\n  constructor(http) {\n    this.http = http;\n  }\n  upload(document) {\n    const formData = new FormData();\n    formData.append('file', document, document.name);\n    y;\n    return this.http.post(`${baseUrl}/upload`, formData);\n  }\n}\nUploadService.ɵfac = function UploadService_Factory(t) {\n  return new (t || UploadService)(i0.ɵɵinject(i1.HttpClient));\n};\nUploadService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UploadService,\n  factory: UploadService.ɵfac,\n  providedIn: 'root'\n});\nexport { UploadService };","map":{"version":3,"names":["baseUrl","UploadService","constructor","http","upload","document","formData","FormData","append","name","y","post","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\gideon.surakat\\Desktop\\Gideon\\Gideon\\src\\app\\services\\upload.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nconst baseUrl = 'https://localhost:44350/api/';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UploadService {\n  constructor(private http: HttpClient) {}\n\n  upload(document: File): Observable<any> {\n    const formData = new FormData();\n    formData.append('file', document, document.name);y\n\n    return this.http.post(`${baseUrl}/upload`, formData);\n  }\n \n}\n"],"mappings":";;AAIA,MAAMA,OAAO,GAAG,8BAA8B;AAE9C,MAGaC,aAAa;EACxBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEvCC,MAAMA,CAACC,QAAc;IACnB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,QAAQ,EAAEA,QAAQ,CAACI,IAAI,CAAC;IAACC,CAAC;IAElD,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAC,GAAGX,OAAO,SAAS,EAAEM,QAAQ,CAAC;EACtD;;AARWL,aAAa,C;mBAAbA,aAAa,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAbd,aAAa,C;SAAbA,aAAa;EAAAe,OAAA,EAAbf,aAAa,CAAAgB,IAAA;EAAAC,UAAA,EAFZ;AAAM;SAEPjB,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}