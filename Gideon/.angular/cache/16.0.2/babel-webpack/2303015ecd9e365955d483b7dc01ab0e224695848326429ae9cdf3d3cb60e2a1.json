{"ast":null,"code":"import { FormControl, FormGroup } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction UploadsComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" File is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UploadsComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Please upload only .xlsx files. \");\n    i0.ɵɵelementEnd();\n  }\n}\nclass UploadsComponent {\n  constructor() {\n    this.uploadForm = new FormGroup({\n      file: new FormControl(null, [Validators.required])\n    });\n  }\n  onFileSelected(event) {\n    const element = event.target;\n    let fileList = element.files;\n    if (fileList && fileList.length > 0) {\n      const file = fileList[0];\n      if (!file.name.endsWith('.xlsx')) {\n        this.uploadForm.controls.file.setErrors({\n          'incorrectFileType': true\n        });\n      } else {\n        this.uploadForm.patchValue({\n          file: file\n        });\n      }\n    }\n  }\n  runUpload() {\n    if (this.uploadForm.valid) {\n      const fileToUpload = this.uploadForm.value.file;\n    }\n  }\n  hasError(controlName, errorName) {\n    return this.uploadForm.controls[controlName].hasError(errorName);\n  }\n}\nUploadsComponent.ɵfac = function UploadsComponent_Factory(t) {\n  return new (t || UploadsComponent)();\n};\nUploadsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UploadsComponent,\n  selectors: [[\"app-uploads\"]],\n  decls: 30,\n  vars: 3,\n  consts: [[1, \"row\"], [1, \"col-md-6\", \"top-content\"], [1, \"p-3\"], [1, \"container\"], [1, \"col-12\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"fileUpload\"], [\"type\", \"file\", \"id\", \"fileUpload\", \"formControlName\", \"file\", 1, \"form-control-file\", 3, \"change\"], [4, \"ngIf\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", \"mr-2\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"p-3\", \"bg-primary\"], [1, \"col-md-6\"], [1, \"p-3\", \"bg-success\"]],\n  template: function UploadsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 0)(5, \"div\", 4)(6, \"h2\");\n      i0.ɵɵtext(7, \"File Upload\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"form\", 5);\n      i0.ɵɵlistener(\"ngSubmit\", function UploadsComponent_Template_form_ngSubmit_8_listener() {\n        return ctx.runUpload();\n      });\n      i0.ɵɵelementStart(9, \"div\", 6)(10, \"label\", 7);\n      i0.ɵɵtext(11, \"Upload Document\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"input\", 8);\n      i0.ɵɵlistener(\"change\", function UploadsComponent_Template_input_change_12_listener($event) {\n        return ctx.onFileSelected($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(13, UploadsComponent_div_13_Template, 2, 0, \"div\", 9);\n      i0.ɵɵtemplate(14, UploadsComponent_div_14_Template, 2, 0, \"div\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 6)(16, \"button\", 10);\n      i0.ɵɵtext(17, \"Reset uploaded content\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"button\", 11);\n      i0.ɵɵtext(19, \"Run Upload\");\n      i0.ɵɵelementEnd()()()()()()()();\n      i0.ɵɵelementStart(20, \"div\", 1)(21, \"div\", 12);\n      i0.ɵɵtext(22, \"Top Content Area\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(23, \"div\", 0)(24, \"div\", 13)(25, \"div\", 12);\n      i0.ɵɵtext(26, \"Bottom Left Content Area\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(27, \"div\", 13)(28, \"div\", 14);\n      i0.ɵɵtext(29, \"Bottom Right Content Area\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"formGroup\", ctx.uploadForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.hasError(\"file\", \"required\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.hasError(\"file\", \"incorrectFileType\"));\n    }\n  },\n  dependencies: [i1.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\".top-content[_ngcontent-%COMP%]{\\n    height: 50vh\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy91cGxvYWRzL3VwbG9hZHMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJO0FBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyIudG9wLWNvbnRlbnR7XG4gICAgaGVpZ2h0OiA1MHZoXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { UploadsComponent };","map":{"version":3,"names":["FormControl","FormGroup","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","UploadsComponent","constructor","uploadForm","file","Validators","required","onFileSelected","event","element","target","fileList","files","length","name","endsWith","controls","setErrors","patchValue","runUpload","valid","fileToUpload","value","hasError","controlName","errorName","selectors","decls","vars","consts","template","UploadsComponent_Template","rf","ctx","ɵɵlistener","UploadsComponent_Template_form_ngSubmit_8_listener","UploadsComponent_Template_input_change_12_listener","$event","ɵɵtemplate","UploadsComponent_div_13_Template","UploadsComponent_div_14_Template","ɵɵadvance","ɵɵproperty"],"sources":["/Users/mac/Desktop/Gideon/src/app/components/uploads/uploads.component.ts","/Users/mac/Desktop/Gideon/src/app/components/uploads/uploads.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-uploads',\n  templateUrl: './uploads.component.html',\n  styleUrls: ['./uploads.component.css']\n})\nexport class UploadsComponent {\n  uploadForm = new FormGroup({\n    file: new FormControl(null, [Validators.required])\n  });\n\n  constructor() { }\n\n  onFileSelected(event: Event) {\n    const element = event.target as HTMLInputElement;\n    let fileList: FileList | null = element.files;\n    if (fileList && fileList.length > 0) {\n      const file = fileList[0];\n\n      if (!file.name.endsWith('.xlsx')) {\n        this.uploadForm.controls.file.setErrors({ 'incorrectFileType': true });\n      } else {\n        this.uploadForm.patchValue({\n          file: file\n        });\n      }\n    }\n  }\n\n  runUpload() {\n    if (this.uploadForm.valid) {\n      const fileToUpload = this.uploadForm.value.file;\n    }\n  }\n\n  hasError(controlName: string, errorName: string) {\n    return this.uploadForm.controls[controlName].hasError(errorName);\n  }\n}\n"," <!-- Main Content Area -->\n\n    <!-- Top Content -->\n    <div class=\"row\">\n        <div class=\"col-md-6 top-content\">\n            <div class=\"p-3\">\n                <div class=\"container\">\n                    <div class=\"row\">\n                      <div class=\"col-12\">\n                        <h2>File Upload</h2>\n                        <form [formGroup]=\"uploadForm\" (ngSubmit)=\"runUpload()\">\n                          <div class=\"form-group\">\n                            <label for=\"fileUpload\">Upload Document</label>\n                            <input type=\"file\" \n                                   class=\"form-control-file\" \n                                   id=\"fileUpload\" \n                                   (change)=\"onFileSelected($event)\"\n                                   formControlName=\"file\">\n                            <div *ngIf=\"hasError('file', 'required')\">\n                              File is required.\n                            </div>\n                            <div *ngIf=\"hasError('file', 'incorrectFileType')\">\n                              Please upload only .xlsx files.\n                            </div>\n                          </div>\n                          <div class=\"form-group\">\n                            <button type=\"button\" class=\"btn btn-secondary mr-2\">Reset uploaded content</button>\n                            <button type=\"submit\" class=\"btn btn-primary\">Run Upload</button>\n                          </div>\n                        </form>\n                      </div>\n                    </div>\n                  </div>\n                  \n  \n            </div>\n        </div>\n        <div class=\"col-md-6 top-content\">\n            <div class=\"p-3 bg-primary\">Top Content Area</div>\n        </div>\n    </div>\n\n    <!-- Bottom Content -->\n    <div class=\"row\">\n        <div class=\"col-md-6\">\n            <div class=\"p-3 bg-primary\">Bottom Left Content Area</div>\n        </div>\n        <div class=\"col-md-6\">\n            <div class=\"p-3 bg-success\">Bottom Right Content Area</div>\n        </div>\n    </div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}